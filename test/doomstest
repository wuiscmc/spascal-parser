{
	Autor: Luis Carlos Mateos
	Programa: Doomtest
	Descripcion: 
		Programa de prueba del analizador semantico para lenguajes 
		basados en Pascal en spa 
}
programa programaTestAnalizadorSemantico;

{ **************************************************************************************************************** }
{ **************************************************************************************************************** }
{ Defincion de constantes }
const
	CONSTINT = 2123123;
	CONSTREAL = 10.1;
	CONSTCAR = 'C';
	TRUEBOOL = VERDADERO;
	FALSEBOOL = FALSO;

{ **************************************************************************************************************** }
{ **************************************************************************************************************** }
{ Definicion de tipos }
tipo  
	listaEnlazada = lista;	

{ **************************************************************************************************************** }
{ **************************************************************************************************************** }
{ Definicion de funciones }


	funcion multiplica (numParam: entero): entero,
	var
		realVar, realVar2 : real;	
		c: caracter;
		funcion m1: entero			
			inicio		
			fin;

	
		funcion m2: entero			
			var 			
				a: caracter; b:caracter; c:lista;
				funcion m31(e:booleano): entero,
				inicio			
					m31(verdadero = falso);		
				fin;
			inicio				
			fin;
		

		funcion m3(e: booleano): entero,			
			var 		
				s: lista;				
				funcion m31(s: entero, m: real, n: caracter): entero,
				var 
					x: caracter;
				inicio				
					{no debe dar error puesto que 's' hace referencia a un entero}
					m31(s, m, n);
				fin;		
			inicio			
				{debe dar error puesto que 's' hace referencia a lista}
				m31(s, 1.1, 'c'); 
			fin;	


	inicio

	fin;


{ **************************************************************************************************************** }
{ **************************************************************************************************************** }
{ MAIN }
var 
	realMainVar : real;
	entMainVar, entMainVar2, entMainVar3: entero;
	carMainVar : caracter;
	linkedListMainVar: listaEnlazada;
	listMainVar: lista;
inicio	

	repite
		si TRUEBOOL entonces
			si CONSTINT = 2 entonces
				1;{hola();}

		CONSTINT + realMainVar;
	hasta (( (2+1+4+6) < 1) = TRUEBOOL) ;
	
	realMainVar := multiplica(3);	
	listMainVar = listMainVar;
	(listMainVar?(entMainVar) = TRUEBOOL) Y (linkedListMainVar?(entMainVar) <> FALSEBOOL);
	linkedListMainVar << (entMainVar + 1 - CONSTINT);
	realMainVar + CONSTINT;			
fin.